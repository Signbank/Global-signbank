# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-12-08 08:47
from __future__ import unicode_literals

from django.db import migrations
from django.db.transaction import atomic
from signbank.settings.base import DEFAULT_KEYWORDS_LANGUAGE


def move_annotation_idglosses(apps, schema_editor):
    """This function copies the annotation_idgloss and annotation_idgloss_en from Gloss instances
    to the AnnotationIdglossTranslation model. """

    Gloss = apps.get_model('dictionary', 'Gloss')
    Language = apps.get_model('dictionary', 'Language')
    AnnotationIdglossTranslation = apps.get_model('dictionary', 'AnnotationIdglossTranslation')

    @atomic
    def move_per_language(language_code_2char, gloss_field_name):
        number_copied = 0
        language = Language.objects.get(language_code_2char=language_code_2char)
        if language is not None:
            for gl in glosses:
                annotation_idgloss_translations = AnnotationIdglossTranslation.objects.filter(gloss=gl,
                                                                                              language=language)
                if annotation_idgloss_translations is None or len(annotation_idgloss_translations) == 0:
                    try:
                        # Saving the new AnnotationIdglossTranslation will not succeed if the language is not in the
                        # languages of the dataset.
                        # If so, fail silently. The annotation_idgloss of the gloss will not be copied to the
                        # AnnotationIdglossTranslation model.
                        AnnotationIdglossTranslation(gloss=gl, language=language, text=getattr(gl, gloss_field_name)).save()
                        number_copied += 1
                    except:
                        pass
        return number_copied

    glosses = Gloss.objects.all()
    number_copied = 0
    if DEFAULT_KEYWORDS_LANGUAGE['language_code_2char'].startswith('en'):
        number_copied += move_per_language('en', 'annotation_idgloss')
    else:
        number_copied += move_per_language('nl', 'annotation_idgloss')
        number_copied += move_per_language('en', 'annotation_idgloss_en')

    print("Number of copied annotation_idglosses: " + str(number_copied))


class Migration(migrations.Migration):

    dependencies = [
        ('dictionary', '0016_auto_20171123_1654'),
    ]

    operations = [
        migrations.RunPython(move_annotation_idglosses),
    ]
