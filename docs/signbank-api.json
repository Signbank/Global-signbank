{
  "openapi": "3.1.0",
  "info":
  {
    "version": "1.0.0",
    "title": "Signbank",
    "description": "Signbank API",
    "termsOfService": "",
    "contact":
    {
      "name": "Signbank dev team"
    }
  },
  "servers":
  [
    {
      "url": "https://signbank.cls.ru.nl",
      "description": "Production server"
    },
    {
      "url": "https://signbank-dev.cls.ru.nl",
      "description": "Development server"
    },
    {
      "url": "https://signbank-test.cls.ru.nl",
      "description": "Development server"
    }
  ],
  "components":
  {
    "securitySchemes":
    {
      "bearerAuth":
      {
        "name": "Authentication",
        "type": "http",
        "scheme": "bearer",
        "in": "header"
      }
    }
  },
  "paths":
  {
    "/dictionary/package/":
    {
      "get":
      {
        "description": "This returns a zipfile of images and videos, to be used in sign language software (originally designed to be used with video annotation software ELAN). If you set the `since_timestamp` parameter, you will only get all glosses that have been created or updated after that particular second, so you don't have to download the whole collection each time you want an up to date set of Signbank videos.",
        "parameters":
        [
          {
            "name": "dataset_name",
            "in": "query",
            "description": "Acrynym of the dataset, like `NGT` or `ASL`",
            "required": true,
            "schema":
            {
              "type": "string"
            }
          },
          {
            "name": "since_timestamp",
            "in": "query",
            "description": "(Unix epoch format, 1 january 2024 will be 1704067200). Limits the glosses to everything created or updated after this second.",
            "required": false,
            "schema":
            {
              "type": "int"
            }
          },
          {
            "name": "extended_fields",
            "in": "query",
            "description": "",
            "required": false,
            "schema":
            {
              "type": "bool"
            }
          }
        ],
        "responses":
        {
          "200":
          {
            "description": "A zipfile containing 3 json files: `glosses.json`, `image_urls.json` and `video_urls.json`"
          }
        },
        "tags": ["Collecting information"]
      }
    },
    "/dictionary/info/":
    {
      "get":
      {
        "description": "Retrieves the names (acronyms) of available datasets.",
        "parameters":
        [
        ],
        "responses":
        {
          "200":
          {
            "description": "The names (acronyms) of available datasets."
          }
        },
        "tags": ["Collecting information"]
      }
    },
    "/dictionary/get_fields_data/{datasetid}":
    {
      "get":
      {
        "description": "Provides the full set of fields for a dataset. The fields are essentially those available in `Import CSV Update Glosses`. Based on the request, the `LANGUAGE_CODE` set to `nl` or one of the other interface languages yields results in that language.",
        "parameters":
        [
          {
            "name": "datasetid",
            "in": "path",
            "description": "The dataset ID is required to provide the language based fields, Annotation, Lemma, Senses, which are available for the translation languages of the dataset. If the user does not have access to the dataset, it defaults to NGT (dataset ID `5`).",
            "required": true,
            "schema":
            {
              "type": "string",
              "default": "5"
            }
          }
        ],
        "responses":
        {
          "200":
          {
            "description": "The full set of fields for a dataset."
          }
        },
        "tags": ["Collecting information"]
      }
    },
    "/dictionary/get_gloss_data/{datasetid}/{glossid}":
    {
      "get":
      {
        "description": "Gives you detailed information on particular gloss. It returns the non-empty fields for the available fields as described above. If the user is not logged in, or the requested gloss is not in the Web dictionary, fewer fields are returned. Based on the request, the `LANGUAGE_CODE` set to `nl` or one of the other interface languages yields results in that language.",
        "parameters":
        [
          {
            "name": "datasetid",
            "in": "path",
            "description": "The dataset ID.",
            "required": true,
            "schema":
            {
              "type": "string",
              "default": "5"
            }
          },
          {
            "name": "glossid",
            "in": "path",
            "description": "The gloss ID.",
            "required": true,
            "schema":
            {
              "type": "string"
            }
          }
        ],
        "responses":
        {
          "200":
          {
            "description": "Detailed information on the gloss."
          }
        },
        "tags": ["Collecting information"],
        "security":
        [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dictionary/get_annotated_sentences_of_gloss/{datasetid}/{glossid}":
    {
      "get":
      {
        "description": "Gives you the annotated sentences of a particular gloss in the format of a list with a dictionary for each annotated sentence. The fields in the dictionary are 'Translation ([Language])', 'Context ([Language])', 'Source', 'Url', 'Representative glosses', 'Unrepresentative glosses'. Based on the request, the `LANGUAGE_CODE` set to `nl` or one of the other interface languages yields results in that language.",
        "parameters":
        [
          {
            "name": "datasetid",
            "in": "path",
            "description": "The dataset ID.",
            "required": true,
            "schema":
            {
              "type": "string",
              "default": "5"
            }
          },
          {
            "name": "glossid",
            "in": "path",
            "description": "The gloss ID.",
            "required": true,
            "schema":
            {
              "type": "string"
            }
          }
        ],
        "responses":
        {
          "200":
          {
            "description": "Detailed information on the annotated sentences of a gloss."
          }
        },
        "tags": ["Collecting information"],
        "security":
        [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dictionary/api_create_gloss/{datasetid}/":
    {
      "post":
      {
        "description": "Creates a new gloss. Senses are optional.",
        "parameters":
        [
          {
            "name": "datasetid",
            "in": "path",
            "description": "ID of the dataset this gloss should be part of (not the acronym)",
            "required": true,
            "schema":
            {
              "type": "string"
            }
          }
        ],
        "requestBody":
        {
          "content":
          {
            "application/json":
            {
              "schema":
              {
                "type": "object",
                "properties":
                {
                  "Dataset":
                  {
                    "type": "string",
                    "description": "Acronym of the dataset, like `NGT` or `ASL`"
                  },
                  "Lemma ID Gloss (Dutch)":
                  {
                    "type": "string"
                  },
                  "Lemma ID Gloss (English)":
                  {
                    "type": "string"
                  },
                  "Annotation ID Gloss (Dutch)":
                  {
                    "type": "string"
                  },
                  "Annotation ID Gloss (English)":
                  {
                    "type": "string"
                  },
                  "Senses (Dutch)":
                  {
                    "type": "string",
                    "example": "[['string']]"
                  },
                  "Senses (English)":
                  {
                    "type": "string",
                    "example": "[['string']]"
                  }
                }
              }
            }
          }
        },
        "responses":
        {
          "200":
          {
            "description": "Creation successful"
          }
        },
        "tags": ["Adding Signbank data"],
        "security":
        [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dictionary/api_create_annotated_sentence/{datasetid}/":
    {
      "post":
      {
        "description": "Creates a new annotated sentence",
        "parameters":
        [
          {
            "name": "datasetid",
            "in": "path",
            "description": "ID of the dataset this annotated sentence should be part of (not the acronym)",
            "required": true,
            "schema":
            {
              "type": "string"
            }
          }
        ],
        "requestBody":
        {
          "content":
          {
            "multipart/form-data":
            {
              "schema":
              {
                "type": "object",
                "properties":
                {
                  "Dataset":
                  {
                    "type": "string",
                    "description": "Acronym of the dataset, like `NGT` or `ASL`",
                    "example": "Test dataset"
                  },
                  "Video_file":
                  {
                    "type": "string",
                    "format": "binary",
                    "description": "The video file to upload"
                  },
                  "Eaf_file":
                  {
                    "type": "string",
                    "format": "binary",
                    "description": "The EAF file to upload"
                  },
                  "Source":
                  {
                    "type": "string",
                    "description": "The source of the sentence",
                    "example": "Corpus name"
                  },
                  "Url":
                  {
                    "type": "string",
                    "description": "The URL of the sentence",
                    "example": "www.corpus.com/sentenceid"
                  }
                },
                "required":
                [
                  "Dataset",
                  "Video_file",
                  "Eaf_file"
                ]
              }
            }
          }
        },
        "responses":
        {
          "200":
          {
            "description": "Creation successful"
          }
        },
        "tags": ["Adding Signbank data"],
        "security":
        [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dictionary/api_create_gloss_nmevideo/{datasetid}/{glossid}/":
    {
      "post":
      {
        "description": "Creates a new 'non manual element' video for a gloss",
        "parameters":
        [
          {
            "name": "datasetid",
            "in": "path",
            "description": "ID of the dataset this gloss should be part of (not the acronym)",
            "required": true,
            "schema":
            {
              "type": "string"
            }
          },
          {
            "name": "glossid",
            "in": "path",
            "description": "ID of the gloss",
            "required": true,
            "schema":
            {
              "type": "string"
            }
          }
        ],
        "requestBody":
        {
          "content":
          {
            "multipart/form-data":
            {
              "schema":
              {
                "type": "object",
                "properties":
                {
                  "Index":
                  {
                    "type": "int",
                    "description": "Order to display"
                  },
                  "Description (Dutch)":
                  {
                    "type": "string"
                  },
                  "Description (English)":
                  {
                    "type": "string"
                  },
                  "File":
                  {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses":
        {
          "200":
          {
            "description": "Creation successful"
          }
        },
        "tags": ["Adding Signbank data"],
        "security":
        [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dictionary/api_update_gloss/{datasetid}/{glossid}/":
    {
      "post":
      {
        "description": "Change a gloss. Only include those gloss fields you wish to update. Values of fields with choices should match those available in Signbank. Between languages the number of senses given must be the same, but the number of words in a sense can differ. Use DOUBLE QUOTES.",
        "parameters":
        [
          {
            "name": "datasetid",
            "in": "path",
            "description": "ID of the dataset this gloss should be part of (not the acronym)",
            "required": true,
            "schema":
            {
              "type": "string"
            }
          },
          {
            "name": "glossid",
            "in": "path",
            "description": "ID of the gloss",
            "required": true,
            "schema":
            {
              "type": "string"
            }
          }
        ],
        "requestBody":
        {
          "content":
          {
            "application/json":
            {
              "schema":
              {
                "type": "object",
                "properties":
                {
                  "Lemma ID Gloss (Dutch)":
                  {
                    "type": "string"
                  },
                  "Lemma ID Gloss (English)":
                  {
                    "type": "string"
                  },
                  "Annotation ID Gloss (Dutch)":
                  {
                    "type": "string"
                  },
                  "Annotation ID Gloss (English)":
                  {
                    "type": "string"
                  },
                  "Word Class":
                  {
                    "type": "string"
                  },
                  "Handedness":
                  {
                    "type": "string"
                  },
                  "Strong Hand":
                  {
                    "type": "string"
                  },
                  "Weak Hand":
                  {
                    "type": "string"
                  },
                  "Handshape Change":
                  {
                    "type": "string"
                  },
                  "Relation Between Articulators":
                  {
                    "type": "string"
                  },
                  "Location":
                  {
                    "type": "string"
                  },
                  "Contact Type":
                  {
                    "type": "string"
                  },
                  "Movement Shape":
                  {
                    "type": "string"
                  },
                  "Movement Direction":
                  {
                    "type": "string"
                  },
                  "Repeated Movement":
                  {
                    "type": "string"
                  },
                  "Alternating Movement":
                  {
                    "type": "string"
                  },
                  "Relative Orientation: Movement":
                  {
                    "type": "string"
                  },
                  "Relative Orientation: Location":
                  {
                    "type": "string"
                  },
                  "Orientation Change":
                  {
                    "type": "string"
                  },
                  "Virtual Object":
                  {
                    "type": "string"
                  },
                  "Phonology Other":
                  {
                    "type": "string"
                  },
                  "Mouth Gesture":
                  {
                    "type": "string"
                  },
                  "Mouthing":
                  {
                    "type": "string"
                  },
                  "Phonetic Variation":
                  {
                    "type": "string"
                  },
                  "Strong Hand Letter":
                  {
                    "type": "string"
                  },
                  "Strong Hand Number":
                  {
                    "type": "string"
                  },
                  "Weak Hand Letter":
                  {
                    "type": "string"
                  },
                  "Weak Hand Number":
                  {
                    "type": "int"
                  },
                  "Weak Drop":
                  {
                    "type": "string"
                  },
                  "Weak Prop":
                  {
                    "type": "string"
                  },
                  "Semantic Field":
                  {
                    "type": "string"
                  },
                  "Derivation History":
                  {
                    "type": "string"
                  },
                  "Named Entity":
                  {
                    "type": "string"
                  },
                  "Valence":
                  {
                    "type": "string"
                  },
                  "Iconic Image":
                  {
                    "type": "string"
                  },
                  "Concepticon Concept Set":
                  {
                    "type": "string"
                  },
                  "In The Web Dictionary":
                  {
                    "type": "bool"
                  },
                  "Is This A Proposed New Sign?":
                  {
                    "type": "bool"
                  },
                  "Exclude From Ecv":
                  {
                    "type": "bool"
                  },
                  "Senses":
                  {
                    "type": "object",
                    "properties":
                    {
                      "en":
                      {
                        "type": "array",
                        "items":
                        {
                          "type": "array",
                          "items":
                          {
                            "type": "string"
                          }
                        }
                      },
                      "nl":
                      {
                        "type": "array",
                        "items":
                        {
                          "type": "array",
                          "items":
                          {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }

                }
              }
            }
          }
        },
        "responses":
        {
          "200":
          {
            "description": "Update successful"
          }
        },
        "tags": ["Updating Signbank data"],
        "security":
        [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dictionary/api_update_gloss/{glossid}/video": 
    {
      "post": 
      {
        "description": "Updates the video of a gloss.",
        "parameters": 
        [
          {
            "name": "glossid",
            "in": "path",
            "description": "ID of the gloss to be updated",
            "required": true,
            "schema": 
            {
              "type": "string"
            }
          }
        ],
        "requestBody":
        {
          "content": 
          {
            "multipart/form-data": 
            {
              "schema": 
              {
                "type": "object",
                "properties": 
                {
                  "center": 
                  {
                    "type": "string",
                    "format": "binary", 
                    "description": "The video file to upload, default/mid camera perspective/"
                  },
                  "left": 
                  {
                    "type": "string",
                    "format": "binary", 
                    "description": "The video file to upload, left camera perspective."
                  },
                  "right": 
                  {
                    "type": "string",
                    "format": "binary", 
                    "description": "The video file to upload, right camera perspective."
                  }
                },
                "required": 
                [
                ]
              }
            }
          }
        },
        "responses": 
        {
          "200": 
          {
            "description": "Update successful"
          },
          "400":
          {
            "description": "No file uploaded"
          },
          "401":
          {
            "description": "User not found"
          },
          "403":
          {
            "description": "No permission"
          },
          "404":
          {
            "description": "Gloss not found"
          }
        },
        "tags": ["Updating Signbank data"],
        "security": 
        [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dictionary/api_update_gloss_morphology/{datasetid}/{glossid}/": 
    {
      "post":
      {
        "description": "Updates the morphology fields for a gloss. Note the required `schema` of the request body below.",
        "parameters":
        [
          {
            "name": "datasetid",
            "in": "path",
            "description": "ID of the dataset this gloss is part of",
            "required": true,
            "schema":
            {
              "type": "string"
            }
          },
          {
            "name": "glossid",
            "in": "path",
            "description": "ID of the gloss to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody":
        {
          "required": true,
          "content":
          {
            "application/json":
             {
              "schema":
              {
                "type": "object",
                "properties":
                {
                  "Sequential Morphology":
                  {
                    "type": "string",
                    "description": "The sequential morphology of the gloss, formatted as 'GLOSS1 + GLOSS2 + GLOSS3'."
                  },
                  "Simultaneous Morphology":
                  {
                    "type": "string",
                    "description": "The simultaneous morphology of the gloss, formatted as 'MORPHEME1:meaning1, MORPHEME2:meaning2'. Requires morphemes."
                  },
                  "Blend Morphology":
                  {
                    "type": "string",
                    "description": "The blend morphology of the gloss, formatted as 'GLOSS1:role1, GLOSS2:role2'."
                  }
                }
              }
            }
          }
        },
        "responses":
        {
          "200":
          {
            "description": "Update successful"
          }
        },
        "tags": ["Updating Signbank data"],
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dictionary/api_update_annotated_sentence/{datasetid}/{annotatedsentenceid}/":
    {
      "post":
      {
        "description": "Updates an annotated sentence with translations, context, source, url, and representative glosses.",
        "parameters":
        [
          {
            "name": "datasetid",
            "in": "path",
            "description": "ID of the dataset this annotated sentence is part of",
            "required": true,
            "schema":
            {
              "type": "string"
            }
          },
          {
            "name": "annotatedsentenceid",
            "in": "path",
            "description": "ID of the annotated sentence to update",
            "required": true,
            "schema":
            {
              "type": "string"
            }
          }
        ],
        "requestBody":
        {
          "content":
          {
            "application/json":
            {
              "schema":
              {
                "type": "object",
                "properties":
                {
                  "Translation (Dutch)":
                  {
                    "type": "string"
                  },
                  "Translation (English)":
                  {
                    "type": "string"
                  },
                  "Context (Dutch)":
                  {
                    "type": "string"
                  },
                  "Context (English)":
                  {
                    "type": "string"
                  },
                  "Source":
                  {
                    "type": "string"
                  },
                  "Url":
                  {
                    "type": "string"
                  },
                  "Representative glosses":
                  {
                    "type": "array",
                    "items":
                    {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses":
        {
          "200":
          {
            "description": "Update successful"
          }
        },
        "tags": ["Updating Signbank data"],
        "security":
        [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dictionary/api_update_gloss_nmevideo/{datasetid}/{glossid}/{videoid}/":
    {
      "post":
      {
        "description": "Updates the details of a 'non-manual element' video for a gloss. To replace the video, delete it using `api_delete_gloss_nmevideo` and create a new NME video using `api_create_gloss_nmevideo`.",
        "parameters":
        [
          {
            "name": "datasetid",
            "in": "path",
            "description": "ID of the dataset this gloss is part of",
            "required": true,
            "schema":
            {
              "type": "string"
            }
          },
          {
            "name": "glossid",
            "in": "path",
            "description": "ID of the gloss to update",
            "required": true,
            "schema":
            {
              "type": "string"
            }
          },
          {
            "name": "videoid",
            "in": "path",
            "description": "ID of the video to update",
            "required": true,
            "schema":
            {
              "type": "string"
            }
          }
        ],
        "requestBody":
        {
          "required": true,
          "content":
          {
            "application/json":
            {
              "schema":
              {
                "type": "object",
                "properties":
                {
                  "Description (English)":
                  {
                    "type": "string",
                    "description": "Description of the video in English."
                  },
                  "Description (Dutch)":
                  {
                    "type": "string",
                    "description": "Description of the video in Dutch."
                  },
                  "Index":
                  {
                    "type": "integer",
                    "description": "Display number in sequence."
                  }
                },
                "required":
                [
                  "Description (English)",
                  "Description (Dutch)",
                  "Index"
                ]
              }
            }
          }
        },
        "responses":
        {
          "200":
          {
            "description": "Update successful"
          }
        },
        "tags": ["Updating Signbank data"],
        "security":
        [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dictionary/upload_zipped_videos_folder_json/{datasetid}/":
    {
      "post":
      {
        "description": "Uploads and unzips a zipped videos folder to the import_videos folder for a specific dataset.",
        "parameters":
        [
          {
            "name": "datasetid",
            "in": "path",
            "description": "The dataset ID is required.",
            "required": true,
            "schema":
            {
              "type": "string"
            }
          }
        ],
        "requestBody":
        {
          "content":
          {
            "multipart/form-data":
            {
              "schema":
              {
                "type": "object",
                "properties": {
                  "File": {
                    "type": "string",
                    "format": "binary",
                    "description": "The zip archive file to upload"
                  }
                }
              }
            }
          }
        },
        "responses":
        {
          "200":
          {
            "description": "File uploaded and unzipped successfully.",
            "content":
            {
              "application/json":
              {
                "schema":
                {
                  "type": "object",
                  "properties":
                  {
                    "filename":
                    {
                      "type": "string",
                      "description": "The name of the uploaded zip file."
                    },
                    "unzippedvideos":
                    {
                      "type": "object",
                      "description": "The unzipped videos categorized by 3-char language code.",
                      "additionalProperties":
                      {
                        "type": "array",
                        "items":
                        {
                          "type": "string",
                          "description": "The names of the unzipped video files."
                        }
                      }
                    }
                  },
                  "example":
                  {
                    "filename": "tst_videos.zip",
                    "unzippedvideos": {
                          "nld": [
                            "STOMP-B.mp4",
                            "POMPOEN-A.mp4"
                          ],
                          "eng": []
                    }
                  }
                }
              }
            }
          }
        },
        "tags":
        [
          "Updating Signbank data"
        ],
        "security":
        [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dictionary/upload_zipped_videos_archive/{datasetid}/":
    {
      "post":
      {
        "description": "Uploads and unzips a zipped videos folder to the api_video_archives folder for a specific dataset.",
        "parameters":
        [
          {
            "name": "datasetid",
            "in": "path",
            "description": "The dataset ID is required.",
            "required": true,
            "schema":
            {
              "type": "string"
            }
          }
        ],
        "requestBody":
        {
          "content":
          {
            "multipart/form-data":
            {
              "schema":
              {
                "type": "object",
                "properties": {
                  "File": {
                    "type": "string",
                    "format": "binary",
                    "description": "The zip archive file to upload"
                  }
                }
              }
            }
          }
        },
        "responses":
        {
          "200":
          {
            "description": "File uploaded and unzipped successfully.",
            "content":
            {
              "application/json":
              {
                "schema":
                {
                  "type": "object",
                  "properties":
                  {
                    "filename":
                    {
                      "type": "string",
                      "description": "The name of the uploaded zip file."
                    },
                    "unzippedvideos":
                    {
                      "type": "object",
                      "description": "The unzipped videos are characterized by gloss ID.",
                      "additionalProperties":
                      {
                        "type": "array",
                        "items":
                        {
                          "type": "string",
                          "description": "The names of the unzipped video files."
                        }
                      }
                    }
                  },
                  "example":
                  {
                    "filename": "tst_videos.zip",
                    "unzippedvideos":
                      [
                        "4681.mp4",
                        "42087.mp4"
                      ]
                  }
                }
              }
            }
          }
        },
        "tags":
        [
          "Updating Signbank data"
        ],
        "security":
        [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dictionary/upload_videos_to_glosses/{datasetid}/":
    {
      "post":
      {
        "description": "Imports the video files found for the dataset in the `import_videos` and `api_video_archives` folders into the corresponding glosses. If a video for a gloss already exists, it is overwritten.",
        "parameters":
        [
          {
            "name": "datasetid",
            "in": "path",
            "description": "ID of the dataset to import videos for. The user must be in Group DatasetManager for the dataset.",
            "required": true,
            "schema":
            {
              "type": "string"
            }
          }
        ],
        "responses":
        {
          "200":
          {
            "description": "Videos imported successfully.",
            "content":
            {
              "application/json":
              {
                "schema":
                {
                  "type": "object",
                  "properties":
                  {
                    "api_video_archives_status":
                    {
                      "type": "array",
                      "description": "List of the status of each imported video file.",
                      "items":
                      {
                        "type": "object",
                        "additionalProperties":
                        {
                          "type": "object",
                          "properties":
                          {
                            "gloss":
                            {
                              "type": "string",
                              "description": "The ID of the gloss to which the video was imported."
                            },
                            "videofile":
                            {
                              "type": "string",
                              "description": "The name of the video file that was imported."
                            },
                            "Video":
                            {
                              "type": "string",
                              "description": "URL to the new video in the gloss."
                            },
                            "status":
                            {
                              "type": "string",
                              "description": "Status of the import operation (e.g., Success, Error)."
                            },
                            "errors":
                            {
                              "type": "string",
                              "description": "Error message if the import operation failed; empty if successful."
                            }
                          }
                        }
                      }
                    }
                  },
                  "example":
                  {
                    "imported_videos":
                    [
                      {
                        "tstMH/42090.mp4":
                        {
                          "gloss": "42090",
                          "videofile": "42090.mp4",
                          "Video": "https://signbank-test.cls.ru.nl//dictionary/protected_media/glossvideo/tstMH/ST/STOMP-42090.mp4",
                          "status": "Success",
                          "errors": ""
                        }
                      },
                      {
                        "tstMH/42087.mp4":
                        {
                          "gloss": "42087",
                          "videofile": "42087.mp4",
                          "Video": "https://signbank-test.cls.ru.nl//dictionary/protected_media/glossvideo/tstMH/PO/POMPOEN-42087.mp4",
                          "status": "Success",
                          "errors": ""
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Updating Signbank data"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dictionary/api_delete_gloss/{datasetid}/{glossid}/":
    {
      "post":
      {
        "description": "Deletes a gloss for a specified dataset.",
        "parameters":
        [
          {
            "name": "datasetid",
            "in": "path",
            "description": "ID of the dataset this gloss belongs to.",
            "required": true,
            "schema":
            {
              "type": "string"
            }
          },
          {
            "name": "glossid",
            "in": "path",
            "description": "ID of the gloss to delete.",
            "required": true,
            "schema":
            {
              "type": "string"
            }
          }
        ],
        "responses":
        {
          "200":
          {
            "description": "Gloss deleted successfully."
          }
        },
        "tags": ["Deleting and restoring Signbank data"],
        "security":
        [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dictionary/api_restore_gloss/{datasetid}/{glossid}/":
    {
      "post":
      {
        "description": "Restores a deleted gloss for a specified dataset.",
        "parameters": [
          {
            "name": "datasetid",
            "in": "path",
            "description": "ID of the dataset this gloss belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "glossid",
            "in": "path",
            "description": "ID of the gloss to restore.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "confirmed": {
                    "type": "string",
                    "description": "Confirmation flag to proceed with restoration. Must be 'True'."
                  }
                },
                "required": ["confirmed"]
              },
              "example": {
                "confirmed": "True"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Gloss restored successfully."
          }
        },
        "tags": ["Deleting and restoring Signbank data"],
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dictionary/api_delete_annotated_sentence/{datasetid}/{annotatedsentenceid}/":
    {
      "post":
      {
        "description": "Deletes an annotated sentence for a specified dataset.",
        "parameters":
        [
          {
            "name": "datasetid",
            "in": "path",
            "description": "ID of the dataset this annotated sentence belongs to.",
            "required": true,
            "schema":
            {
              "type": "string"
            }
          },
          {
            "name": "annotatedsentenceid",
            "in": "path",
            "description": "ID of the annotated sentence to delete.",
            "required": true,
            "schema":
            {
              "type": "string"
            }
          }
        ],
        "responses":
        {
          "200":
          {
            "description": "Annotated sentence deleted successfully."
          }
        },
        "tags": ["Deleting and restoring Signbank data"],
        "security":
        [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dictionary/api_delete_gloss_nmevideo/{datasetid}/{glossid}/{videoid}/":
    {
      "post": {
        "description": "Deletes a non-manual element (NME) video associated with a gloss for a specified dataset.",
        "parameters": [
          {
            "name": "datasetid",
            "in": "path",
            "description": "ID of the dataset this gloss belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "glossid",
            "in": "path",
            "description": "ID of the gloss that the NME video is associated with.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "videoid",
            "in": "path",
            "description": "ID of the NME video to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NME video deleted successfully."
          }
        },
        "tags": ["Deleting and restoring Signbank data"],
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  }
}
