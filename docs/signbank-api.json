{
  "openapi": "3.1.0",
  "info": 
  {
    "version": "1.0.0",
    "title": "Signbank",
    "description": "Signbank API",
    "termsOfService": "",
    "contact": 
    {
      "name": "Signbank dev team"
    }
  },
  "servers": 
  [
    {
      "url": "https://signbank.cls.ru.nl",
      "description": "Production server"
    },
    {
      "url": "https://signbank-dev.cls.ru.nl",
      "description": "Development server"
    }
  ],
  "components": 
  {
    "securitySchemes":
    {
      "bearerAuth": 
      {
        "name": "Authentication",
        "type": "http",
        "scheme": "bearer",
        "in": "header"
      }
    }
  },
  "paths": 
  {
    "/dictionary/package/": 
    {
      "get": 
      {
        "description": "This returns a zipfile of images and videos, to be used in sign language software (originally designed to be used with video annotation software ELAN). If you set the `since_timestamp` parameter, you will only get all glosses that have been created or updated after that particular second, so you don't have to download the whole collection each time you want an up to date set of Signbank videos.",
        "parameters":
        [
          {
            "name": "dataset_name",
            "in": "query",
            "description": "Acrynym of the dataset, like `NGT` or `ASL`",
            "required": true,
            "schema": 
            {
              "type": "string"
            }
          },
          {
            "name": "since_timestamp",
            "in": "query",
            "description": "(Unix epoch format, 1 january 2024 will be 1704067200). Limits the glosses to everything created or updated after this second.",
            "required": false,
            "schema": 
            {
              "type": "int"
            }
          },
          {
            "name": "extended_fields",
            "in": "query",
            "description": "",
            "required": false,
            "schema": 
            {
              "type": "bool"
            }
          }        
        ],
        "responses": 
        {
          "200": 
          {
            "description": "A zipfile containing 3 json files: `glosses.json`, `image_urls.json` and `video_urls.json`"
          }
        },
        "tags": ["Collecting information"]
      }
    },
    "/dictionary/info/": 
    {
      "get": 
      {
        "description": "Retrieves the names (acronyms) of available datasets.",
        "parameters":
        [       
        ],
        "responses": 
        {
          "200": 
          {
            "description": "The names (acronyms) of available datasets."
          }
        },
        "tags": ["Collecting information"]        
      }
    },
    "/dictionary/get_fields_data/{datasetid}":
    {
      "get": 
      {
        "description": "Provides the full set of fields for a dataset. The fields are essentially those available in `Import CSV Update Glosses`. Based on the request, the `LANGUAGE_CODE` set to `nl` or one of the other interface languages yields results in that language.",
        "parameters":
        [
          {
            "name": "datasetid",
            "in": "path",
            "description": "The dataset ID is required to provide the language based fields, Annotation, Lemma, Senses, which are available for the translation languages of the dataset. If the user does not have access to the dataset, it defaults to NGT (dataset ID `5`).",
            "required": true,
            "schema": 
            {
              "type": "string",
              "default": "5"
            }
          }     
        ],
        "responses": 
        {
          "200": 
          {
            "description": "The full set of fields for a dataset."
          }
        },
        "tags": ["Collecting information"]
      }
    },
    "/dictionary/get_gloss_data/{datasetid}/{glossid}":
    {
      "get": 
      {
        "description": "Gives you detailed information on particular gloss. It returns the non-empty fields for the available fields as described above. If the user is not logged in, or the requested gloss is not in the Web dictionary, fewer fields are returned. Based on the request, the `LANGUAGE_CODE` set to `nl` or one of the other interface languages yields results in that language.",
        "parameters":
        [
          {
            "name": "datasetid",
            "in": "path",
            "description": "The dataset ID.",
            "required": true,
            "schema": 
            {
              "type": "string",
              "default": "5"
            }
          },
          {
            "name": "glossid",
            "in": "path",
            "description": "The gloss ID.",
            "required": true,
            "schema": 
            {
              "type": "string"
            }
          }     
        ],
        "responses": 
        {
          "200": 
          {
            "description": "Detailed information on the gloss."
          }
        },
        "tags": ["Collecting information"],
        "security": 
        [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dictionary/api_create_gloss/": 
    {
      "post": 
      {
        "description": "Creates a new gloss",
        "parameters":
        [
          {
            "name": "Dataset id",
            "in": "path",
            "description": "ID of the dataset this gloss should be part of (not the acronym)",
            "required": true,
            "schema": 
            {
              "type": "string"
            }
          }     
        ],
        "requestBody":
        {
          "content": 
          {
            "application/json": 
            {
              "schema": 
              {
                "type": "object",
                "properties": 
                {
                  "Dataset": 
                  {
                    "type": "string",
                    "description": "Acronym of the dataset, like `NGT` or `ASL`"
                  },
                  "Lemma ID Gloss (Dutch)": 
                  {
                    "type": "string"
                  },
                  "Lemma ID Gloss (English)": 
                  {
                    "type": "string"
                  },
                  "Annotation ID Gloss (Dutch)": 
                  {
                    "type": "string"
                  },
                  "Annotation ID Gloss (English)": 
                  {
                    "type": "string"
                  },
                  "Senses (Dutch)": 
                  {
                    "type": "array",
                    "items": 
                    {
                      "type": "array",
                      "items": 
                      {
                        "type": "string"
                      }
                    }
                  },
                  "Senses (English)": 
                  {
                    "type": "array",
                    "items": 
                    {
                      "type": "array",
                      "items": 
                      {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": 
        {
          "200": 
          {
            "description": "Creation successful"
          }
        },
        "tags": ["Adding Signbank data"],
        "security": 
        [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dictionary/api_create_gloss_nmevideo/{datasetid}/{glossid}/":
    {
      "post": 
      {
        "description": "Creates a new 'non manual element' video for a gloss",
        "parameters":
        [
          {
            "name": "datasetid",
            "in": "path",
            "description": "ID of the dataset this gloss should be part of (not the acronym)",
            "required": true,
            "schema": 
            {
              "type": "string"
            }
          },
          {
            "name": "glossid",
            "in": "path",
            "description": "ID of the gloss",
            "required": true,
            "schema": 
            {
              "type": "string"
            }
          }     
        ],
        "requestBody":
        {
          "content": 
          {
            "application/json": 
            {
              "schema": 
              {
                "type": "object",
                "properties": 
                {
                  "Index": 
                  {
                    "type": "int",
                    "description": "Order to display"
                  },
                  "Description (Dutch)": 
                  {
                    "type": "string"
                  },
                  "Description (English)": 
                  {
                    "type": "string"
                  },
                  "File": 
                  {
                    "type": "base64-encoded file"
                  }
                }
              }
            }
          }
        },
        "responses": 
        {
          "200": 
          {
            "description": "Creation successful"
          }
        },
        "tags": ["Adding Signbank data"],
        "security": 
        [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dictionary/api_update_gloss/{datasetid}/{glossid}/":
    {
      "post": 
      {
        "description": "Change a gloss. Between languages the number of senses given must be the same, but the number of words in a sense can differ.",
        "parameters":
        [
          {
            "name": "datasetid",
            "in": "path",
            "description": "ID of the dataset this gloss should be part of (not the acronym)",
            "required": true,
            "schema": 
            {
              "type": "string"
            }
          },
          {
            "name": "glossid",
            "in": "path",
            "description": "ID of the gloss",
            "required": true,
            "schema": 
            {
              "type": "string"
            }
          }     
        ],
        "requestBody":
        {
          "content": 
          {
            "application/json": 
            {
              "schema": 
              {
                "type": "object",
                "properties": 
                {
                  "Lemma ID Gloss (Dutch)": 
                  {
                    "type": "string"
                  },
                  "Lemma ID Gloss (English)": 
                  {
                    "type": "string"
                  },
                  "Annotation ID Gloss (Dutch)": 
                  {
                    "type": "string"
                  },
                  "Annotation ID Gloss (English)": 
                  {
                    "type": "string"
                  },
                  "Word Class": 
                  {
                    "type": "string"
                  },
                  "Handedness": 
                  {
                    "type": "string"
                  },
                  "Strong Hand": 
                  {
                    "type": "string"
                  },
                  "Weak Hand": 
                  {
                    "type": "string"
                  },
                  "Handshape Change": 
                  {
                    "type": "string"
                  },
                  "Relation Between Articulators": 
                  {
                    "type": "string"
                  },
                  "Location": 
                  {
                    "type": "string"
                  },
                  "Contact Type": 
                  {
                    "type": "string"
                  },
                  "Movement Shape": 
                  {
                    "type": "string"
                  },
                  "Movement Direction": 
                  {
                    "type": "string"
                  },
                  "Repeated Movement": 
                  {
                    "type": "string"
                  },
                  "Alternating Movement": 
                  {
                    "type": "string"
                  },
                  "Relative Orientation: Movement": 
                  {
                    "type": "string"
                  },
                  "Relative Orientation: Location": 
                  {
                    "type": "string"
                  },
                  "Orientation Change": 
                  {
                    "type": "string"
                  },
                  "Virtual Object": 
                  {
                    "type": "string"
                  },
                  "Phonology Other": 
                  {
                    "type": "string"
                  },
                  "Mouth Gesture": 
                  {
                    "type": "string"
                  },
                  "Mouthing": 
                  {
                    "type": "string"
                  },
                  "Phonetic Variation": 
                  {
                    "type": "string"
                  },
                  "Strong Hand Letter": 
                  {
                    "type": "string"
                  },
                  "Strong Hand Number": 
                  {
                    "type": "string"
                  },
                  "Weak Hand Letter": 
                  {
                    "type": "string"
                  },
                  "Weak Hand Number":	
                  {
                    "type": "int"
                  },
                  "Weak Drop": 
                  {
                    "type": "string"
                  },
                  "Weak Prop": 
                  {
                    "type": "string"
                  },
                  "Semantic Field": 
                  {
                    "type": "string"
                  },
                  "Derivation History": 
                  {
                    "type": "string"
                  },
                  "Named Entity": 
                  {
                    "type": "string"
                  },
                  "Valence": 
                  {
                    "type": "string"
                  },
                  "Iconic Image": 
                  {
                    "type": "string"
                  },
                  "Concepticon Concept Set": 
                  {
                    "type": "string"
                  },
                  "In The Web Dictionary": 
                  {
                    "type": "bool"
                  },
                  "Is This A Proposed New Sign?": 
                  {
                    "type": "bool"
                  },
                  "Exclude From Ecv": 
                  {
                    "type": "bool"
                  },
                  "Senses": 
                  {
                    "type": "object",
                    "properties": 
                    {
                      "en": 
                      {
                        "type": "array",
                        "items": 
                        {
                          "type": "array",
                          "items": 
                          {
                            "type": "string"
                          }
                        }
                      },
                      "nl": 
                      {
                        "type": "array",
                        "items": 
                        {
                          "type": "array",
                          "items": 
                          {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }

                }
              }
            }
          }
        },
        "responses": 
        {
          "200": 
          {
            "description": "Update successful"
          }
        },
        "tags": ["Updating Signbank data"],
        "security": 
        [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  }
}